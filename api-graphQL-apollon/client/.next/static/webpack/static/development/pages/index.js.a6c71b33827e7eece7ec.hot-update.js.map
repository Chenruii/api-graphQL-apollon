{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.a6c71b33827e7eece7ec.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import App from \"../components/App\";\nimport InfoBox from \"../components/InfoBox\";\nimport Header from \"../components/Header\";\nimport Submit from \"../components/Submit\";\nimport PostList from \"../components/PostList\";\nimport { withApollo } from \"../lib/apollo\";\nimport { Button, Box, Divider, Typography } from \"@material-ui/core\";\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks'\n\nexport const ALL_PRODUCTS_QUERY = gql`\n  query product {\n    products {\n      id\n      name\n      description\n      category\n      price\n    }\n  }\n` \n\nconst IndexPage = props => {\n  const {data, loading, error} = useQuery(ALL_PRODUCTS_QUERY);\n\n  if (loading) return <div>Loading...</div>;\n\n  \n  return (\n  <App>\n    <Header />\n    <InfoBox>\n      ℹ️ This example shows how to fetch all initial apollo queries on the\n      server. If you <a href=\"/\">reload</a> this page you won't see a loader\n      since Apollo fetched all needed data on the server. This prevents{\" \"}\n      <a\n        href=\"https://nextjs.org/blog/next-9#automatic-static-optimization\"\n        target=\"_blank\"\n      >\n        automatic static optimization\n      </a>{\" \"}\n      in favour of full Server-Side-Rendering.\n    </InfoBox>\n\n    {data.products.map(product => (\n      <Box m={3} p={1} bgcolor=\"#eee\">\n        <Typography variant=\"h6\">{product.name}</Typography>\n        <Typography variant=\"body1\">{product.description}</Typography>\n        <Typography variant=\"caption\">{product.category}</Typography>\n\n      </Box>\n    ))}\n    <Box mt={3}>\n      <Button variant=\"contained\" color=\"primary\">\n        material-ui works\n      </Button>\n    </Box>\n  </App> \n)};\n\nexport default withApollo(IndexPage);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAWA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;A","sourceRoot":""}